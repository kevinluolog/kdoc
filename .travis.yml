# OUTPUT: travisci_out_kdoc

# 指定语言环境
language: python
# 指定需要sudo权限
sudo: required
# 指定python版本
python: 
  - 3.7.4
# 指定缓存模块，可选。缓存可加快编译速度。
#cache:
#  directories:
#    - node_modules

# 指定doc启动分支
branches:
  only:
    - dev 

# 一行一个build,一个build中的环境变量要写在一行，一个意思。
env:
  - T_DIR_BASE_SRC=$TRAVIS_BUILD_DIR/003work/002memo T_DIR_TEMPLATE=$TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/templates

before_install:

# Start: Build Lifecycle
install:
#
  - sudo apt-get install ttf-wqy-microhei  #文泉驿-微米黑
  - sudo apt-get install ttf-wqy-zenhei  #文泉驿-正黑
#  - sudo apt-get install xfonts-wqy #文泉驿-点阵宋体
#  - sudo cat /etc/fonts/fonts.conf
#  - fc-list -f "%{family}\n" :lang=zh > zhfont.txt
#  - cat zhfont.txt
#  - sudo apt-get install ttf-wqy-zenhei  #文泉驿-正黑
#  - sudo apt-get install xfonts-wqy #文泉驿-点阵宋体

  - sudo apt-get install texlive-full

# texlive & texlive-xetex & texlive-xetex-extra（转换为pdf）
# 使用xelatex这个引擎为Pandoc提供pdf转换中文支持，Ubuntu12.04.5LTS需要 texlive-xetex texlive-latex-extra 这两个包，安装这两个包需要添加 texlive-backports/ppa 这个库。
#`ppa源:texlive-backports:sudo add-apt-repository ppa:texlive-backports/ppa -y  <https://launchpad.net/~grand-edgemaster/+archive/ubuntu/texlive-backports>`__
#  - sudo apt-get install python-software-properties #这个在Travis下是不需要的
#  - sudo add-apt-repository ppa:texlive-backports/ppa -y
#  - sudo apt-get clean
#  - sudo apt-get update -y
#  - sudo apt-get install texlive-math-extra texlive-science texlive-bibtex-extra texlive-fonts-extra texlive-fonts-recommended texlive-metapost texlive-pictures texlive-xetex texlive-latex-extra latexmk fonts-sil-gentiumplus texlive-lang-all texlive-lang-cjk  lmodern jadetex -y
#  - sudo apt-get install texlive-math-extra texlive-science texlive-bibtex-extra texlive-fonts-extra texlive-fonts-recommended texlive-metapost texlive-pictures texlive-xetex texlive-latex-extra latexmk fonts-sil-gentiumplus texlive-lang-all texlive-lang-cjk  lmodern jadetex -y

# `ppa源:texlive-2019:sudo add-apt-repository ppa:jonathonf/texlive-2019/ppa -y  <https://launchpad.net/~jonathonf/+archive/ubuntu/texlive-2019>`__
#  - sudo add-apt-repository ppa:jonathonf/texlive-2019 -y
#  - sudo apt-get clean
#  - sudo apt-get update -y
#  - sudo apt-get install texlive-full -y

# install sphinx
#  - apt-get install python3-sphinx
  - pip install Sphinx

# pandoc （提供基本转换环境）
# 针对Ubuntu12.04,5下安装pandoc如果使用cabal处理依赖关系总是出现版本不符合的问题，不知道如何解决，反而直接下载 deb包 来安装却非常简单，适合travis-ci虚拟机环境
#  - wget https://github.com/jgm/pandoc/releases/download/1.17.1/pandoc-1.17.1-2-amd64.deb
  - wget https://github.com/jgm/pandoc/releases/download/2.7.3/pandoc-2.7.3-1-amd64.deb
  - sudo dpkg -i pandoc-2.7.3-1-amd64.deb


script:
  - sudo cat /etc/fonts/fonts.conf
  - fc-list :lang=zh-cn
  - fc-list -f "%{family}\n" :lang=zh > zhfont.txt
  - cat zhfont.txt
#   - git ls-files | xargs -I{} bash -c 'touch "{}" --date=$(git log -n1 --pretty=format:%ct -- "{}")'
#  - git ls-files | xargs -I{} bash -c 'touch "{}" --date=@$(git log -n1 --pretty=format:%ct -- "{}")'
#  - git checkout dev -f --with-timestamps
#  - echo $TRAVIS_BUILD_DIR
  - echo $T_DIR_BASE_SRC
#  - mkdir -p output/002memo
#  - mkdir -p output/copy2
#  - ls

#1. 学习memo笔记： kdoc/003work/002memo

#1.1 pandoc:

#1.1.1 .rst转换成hexo 格式.md 002memo pandoc
#  - pandoc ./003work/002memo/001software/001install/sublime.rst -o index.html
# ADD_HEXO_TAG_FROM_DIR=技术+
#  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$T_DIR_BASE_SRC DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo DIR_BASE_COPYTO=$TRAVIS_BUILD_DIR/output/pandoc/hexomd/copy2 SUFFIX_FROM=.rst SUFFIX_TO=.md DIR_TEMPLATE=$T_DIR_TEMPLATE ADD_HEXO_TAG_FROM_DIR=技术+
# ADD_HEXO_TAG_FROM_DIR=
  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$T_DIR_BASE_SRC DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.md DIR_TEMPLATE=$T_DIR_TEMPLATE ADD_HEXO_TAG_FROM_DIR=笔记 CTL_TOC=TRUE

#1.1.2 .rst转换成 格式.html 002memo pandoc
  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$T_DIR_BASE_SRC DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/html/002memo DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.html 
#DIR_TEMPLATE=$T_DIR_TEMPLATE \
#ADD_HEXO_TAG_FROM_DIR=\

#1.1.3 .rst转换成 格式.pdf 002memo pandoc

#1.2 sphinx:

#1.2.1 sphinx: .rst转换成 格式.html 002memo sphinx
# sphinx-build -b html sourcedir builddir
#  - mkdir -p $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo
#  - sphinx-build --version
#  - sphinx-build --help
  - sphinx-build -b html $TRAVIS_BUILD_DIR/003work/002memo $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo
#  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo -maxdepth 1 -type d | grep "[\.]*doctrees$"
  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo -maxdepth 1 -type d | grep "[\.]*doctrees$" | xargs rm -rfv  
# rm .buildinfo
#  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo -maxdepth 1 -type f -name '\.buildinfo'
  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo -maxdepth 1 -type f -name '\.buildinfo' -exec  rm -fv {} \;
  
# 因hexo和jekyll不要处理此类目录，会导致引用不到，所以在根目录要添加.nojekyll文件, 详细请参考 hexo.rst `怎么解决githubpages不能识别下划线开头的目录？`_
  - touch $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo/.nojekyll

#1.2.2 .rst转换成 格式.pdf 002memo sphinx
#  - sphinx-build -b latex $TRAVIS_BUILD_DIR/003work/002memo $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo

#2 博客post文章： kdoc/003work/003post

#2.1 pandoc:

#2.1.1 .rst转换成hexo 格式.md
# ADD_HEXO_TAG_FROM_DIR=post+
#  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$TRAVIS_BUILD_DIR/003work/003post DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.md DIR_TEMPLATE=$T_DIR_TEMPLATE ADD_HEXO_TAG_FROM_DIR=post+
# ADD_HEXO_TAG_FROM_DIR= ,置空表示取文件路径的最后目录作为hexo tag
  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$TRAVIS_BUILD_DIR/003work/003post DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.md DIR_TEMPLATE=$T_DIR_TEMPLATE ADD_HEXO_TAG_FROM_DIR=post+ CTL_TOC=TRUE

#2.1.2 .rst转换成 格式.html 003post pandoc
  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$TRAVIS_BUILD_DIR/003work/003post DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/html/003post DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.html

#2.1.3 .rst转换成 格式.pdf 003post pandoc

#2.2 sphinx:

#2.2.1 sphinx: .rst转换成 格式.html
# sphinx-build -b html sourcedir builddir
#  - mkdir -p $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo
#  - sphinx-build --version
#  - sphinx-build --help
  - sphinx-build -b html $TRAVIS_BUILD_DIR/003work/003post $TRAVIS_BUILD_DIR/output/sphinx/html/build-post
# rm .doctrees
#  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-post -maxdepth 1 -type d | grep "[\.]*doctrees$"
  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-post -maxdepth 1 -type d | grep "[\.]*doctrees$" | xargs rm -rfv  
# rm .buildinfo
#  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-post -maxdepth 1 -type f -name '\.buildinfo'
  - find $TRAVIS_BUILD_DIR/output/sphinx/html/build-post -maxdepth 1 -type f -name '\.buildinfo' -exec rm -fv {} \;
  
# 因hexo和jekyll不要处理此类目录，会导致引用不到，所以在根目录要添加.nojekyll文件, 详细请参考 hexo.rst `怎么解决githubpages不能识别下划线开头的目录？`_
  - touch $TRAVIS_BUILD_DIR/output/sphinx/html/build-post/.nojekyll

#2.1.3 .rst转换成 格式.pdf 003post sphinx
#  - sphinx-build -b latex $TRAVIS_BUILD_DIR/003work/003post $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post

#  - cp index.html ./output/
#  - ls
#  - ls ./output
#  - find -type d


#d1 学习memo笔记 => kevinluolog/gp-memo[branch:gh-pages]：sphinx html/build-memo, 网页kevinluolog.github.io/gp-memo
#deploy:
  - mkdir -p /tmp/klgit
  - cd /tmp/klgit
  
# 注意：如果直接显式指明clone目标目录，则一定要把repo名字写上，不然不会自动加上;如果省略,则会自动创建repo名的目录，然后clone进这个目录
# <directory>The name of a new directory to clone into. The "humanish" part of the source repository is used if no directory is explicitly given (repo for /path/to/repo.git and foo for host.xz:foo/.git). Cloning into an existing directory is only allowed if the directory is empty  #- git clone -b gh-pages https://$GH_TOKEN_FULL@github.com/kevinluolog/gp-memo.git /tmp/klgit/gp-memo
  - git clone -b gh-pages https://$GH_TOKEN_FULL@github.com/kevinluolog/gp-memo.git
#  - ls --help
#  - find --help
#  - sed --help
#  - gawk --help
#  - awk --help
#  - pwd
#  - ls
#  - find -type d
#  - cp --help
#  - rm --help
#  - touch --help
  - mv --help

# 进入到clone 创建的repo目录
  - cd gp-memo
# 选项-rt(一定要小t，表示DEST是目录，大T表示目标是文件source是文件时会出错)表示只复制文件和子目录，不包括.开头的文件和隐藏文件。同时如果文件在在会自动覆盖
# Usage: cp [OPTION]... [-T] SOURCE DEST
#   or:  cp [OPTION]... SOURCE... DIRECTORY
#   or:  cp [OPTION]... -t DIRECTORY SOURCE...
# Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.
#  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY
#  -T, --no-target-directory    treat DEST as a normal file
#  -u, --update                 copy only when the SOURCE file is newer
#  -v, --verbose         explain what is being done
  - cp -f -rt . $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo/*
# 因hexo和jekyll会自动忽略下划线开头的目录，从而导致引用不到CSS,JAVASCRIPT,ETC.，所以在根目录要添加.nojekyll文件
  - touch .nojekyll
  - pwd
  - ls

# git add . ：他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。
# git add -u ：他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add --update的缩写）
# git add -A ：是上面两个功能的合集（git add --all的缩写）
  - git add -A
# git commit -m ‘message’
# -m 参数表示可以直接输入后面的“message”，如果不加 -m参数，那么是不能直接输入message的，而是会调用一个编辑器一般是vim来让你输入这个message，
# message即是我们用来简要说明这次提交的语句。
# git commit -am ‘message’ -am等同于-a -m
# -a参数可以将所有已跟踪文件中的执行修改或删除操作的文件都提交到本地仓库，即使它们没有经过git add添加到暂存区，
# 注意: 新加的文件（即没有被git系统管理的文件）是不能被提交到本地仓库的。
# --allow-empty
# Usually recording a commit that has the exact same tree as its sole parent commit is a mistake, and the command prevents you from making such a commit. This option bypasses the safety, and is primarily for use by foreign SCM interface scripts.
  - git commit --allow-empty -m "kl+travis+"
# git push的一般形式为 git push <远程主机名> <本地分支名> <远程分支名> ，例如 git push origin master：refs/for/master ，即是将本地的master分支推送到远程主机origin上的对应master分支， origin 是远程主机名。第一个master是本地分支名，第二个master是远程分支名。
# git push origin master
# 如果远程分支被省略，如上则表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建
# git push origin ：refs/for/master
# 如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支，等同于 git push origin –delete master
# git push origin
# 如果当前分支与远程分支存在追踪关系，则本地分支和远程分支都可以省略，将当前分支推送到origin主机的对应分支
# git push
# 如果当前分支只有一个远程分支，那么主机名都可以省略，形如 git push，可以使用git branch -r ，查看远程的分支名
#  关于 refs/for：
# refs/for 的意义在于我们提交代码到服务器之后是需要经过code review 之后才能进行merge的，而refs/heads 不需要
# 原文链接：https://blog.csdn.net/qq_37577660/article/details/78565899
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/gp-memo.git
  - cd $TRAVIS_BUILD_DIR
  - pwd

#d2 博客post文章 => kevinluolog/gp-post[branch:gh-pages]：sphinx html/build-post, 网页kevinluolog.github.io/gp-post
#deploy:
#  - mkdir -p /tmp/klgit
  - cd /tmp/klgit
  - git clone -b gh-pages https://$GH_TOKEN_FULL@github.com/kevinluolog/gp-post.git
  - cd gp-post
  - cp -f -rt . $TRAVIS_BUILD_DIR/output/sphinx/html/build-post/*
  - touch .nojekyll
  - ls
  - git add -A
  - git commit --allow-empty -m "kl+travis+"
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/gp-post.git
  - cd $TRAVIS_BUILD_DIR
  - pwd

#d3. 博客post+学习笔记 2 hexo+2
# master
# hexo-next-Gemini
# hexo-next-muse
# hexo-next-Pisces
# hexo-maup

# total统一clone，分别 cp,add,commit,push
#d3.0 博客post文章+学习memo笔记 => [branch:上面5个分支一起]kevinluolog/hexo-klblog-src：sphinx html/build-post, 网页kevinluolog.github.io/master
#deploy:
  - mkdir -p /tmp/klgit/hexo-klblog-src-total
  - cd /tmp/klgit/hexo-klblog-src-total
# 注意：如果直接显式指明clone目标目录，则一定要把repo名字写上，不然不会自动加上;如果省略,则会自动创建repo名的目录，然后clone进这个目录
  - git clone https://$GH_TOKEN_FULL@github.com/kevinluolog/hexo-klblog-src.git
  - cd hexo-klblog-src

#workOnB1. master
  - git checkout master
  - rm -r ./source/_posts/kl_notes/002memo
# copy 002 memo目录+文件 2 source/_posts/kl_notes
  - cp -f -rt ./source/_posts/kl_notes $TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo
  - rm -r ./source/_posts/kl_post/003post
# copy 003post 目录+文件 2 source/_posts/kl_notes
  - mkdir -p ./source/_posts/kl_post
  - cp -f -rt ./source/_posts/kl_post $TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post
  - touch .nojekyll
  - ls
  - git add -A
  - git commit --allow-empty -m "kl+travis+master+"
  - git branch -vv
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/hexo-klblog-src.git

#workOnB2. hexo-next-Gemini
  - git checkout hexo-next-Gemini
  - rm -r ./source/_posts/kl_notes/002memo
# copy 002 memo目录+文件 2 source/_posts/kl_notes
  - cp -f -rt ./source/_posts/kl_notes $TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo
  - rm -r ./source/_posts/kl_post/003post
# copy 003post 目录+文件 2 source/_posts/kl_notes
  - mkdir -p ./source/_posts/kl_post
  - cp -f -rt ./source/_posts/kl_post $TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post
  - touch .nojekyll
  - git add -A
  - git commit --allow-empty -m "kl+travis+hexo-next-Gemini"
  - git branch -vv
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/hexo-klblog-src.git

#workOnB3. hexo-next-muse  
  - git checkout hexo-next-muse
  - rm -r ./source/_posts/kl_notes/002memo
# copy 002 memo目录+文件 2 source/_posts/kl_notes
  - cp -f -rt ./source/_posts/kl_notes $TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo
  - rm -r ./source/_posts/kl_post/003post
# copy 003post 目录+文件 2 source/_posts/kl_notes
  - mkdir -p ./source/_posts/kl_post
  - cp -f -rt ./source/_posts/kl_post $TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post
  - touch .nojekyll
  - ls
  - git add -A
  - git commit --allow-empty -m "kl+travis+hexo-next-muse"
  - git branch -vv
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/hexo-klblog-src.git

#workOnB4. hexo-next-Pisces
  - git checkout hexo-next-Pisces
  - rm -r ./source/_posts/kl_notes/002memo
# copy 002 memo目录+文件 2 source/_posts/kl_notes
  - cp -f -rt ./source/_posts/kl_notes $TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo
  - rm -r ./source/_posts/kl_post/003post
# copy 003post 目录+文件 2 source/_posts/kl_notes
  - mkdir -p ./source/_posts/kl_post
  - cp -f -rt ./source/_posts/kl_post $TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post
  - touch .nojekyll
  - ls
  - git add -A
  - git commit --allow-empty -m "kl+travis+hexo-next-Pisces"
  - git branch -vv
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/hexo-klblog-src.git

#workOnB5. hexo-maup       
  - git checkout hexo-maup
# 完全以kdoc中source文件为标准，因为hexo klblog, 还会保有在kdoc中的删除的文件和目录，光cp不能清除同步  - rm -rv ./source/_posts/kl_notes/002memo
  - rm -rv ./source/_posts/kl_notes/002memo
# copy 002 memo目录+文件 2 source/_posts/kl_notes
  - cp -f -rt ./source/_posts/kl_notes $TRAVIS_BUILD_DIR/output/pandoc/hexomd/002memo
  - rm -rv ./source/_posts/kl_post/003post
# copy 003post 目录+文件 2 source/_posts/kl_notes
  - mkdir -p ./source/_posts/kl_post
  - cp -f -rt ./source/_posts/kl_post $TRAVIS_BUILD_DIR/output/pandoc/hexomd/003post
  - touch .nojekyll
  - ls
  - git add -A
  - git commit --allow-empty -m "kl+travis+hexo-maup"
  - git branch -vv
  - git branch -r
  - git push https://$GH_TOKEN_FULL@github.com/kevinluolog/hexo-klblog-src.git

  - cd $TRAVIS_BUILD_DIR
  - pwd


#生成pdf,放到最后，这个费时间，这样可以先触发kevinluolog/hexo-klblog-src，先deploy网站。

#with pandoc
# x.x.x的数字编号含义如下：
# (1.002memo|2.003post).(1.pandoc|2.sphinx).(1..rst2html|2..rst2hexomd|3..rst2pdf)
#1.1.3 .rst转换成 格式.pdf 002memo pandoc
  - echo here,kl+1
  - pandoc --version
#  - pandoc --help
  - xelatex --version
#  - xelatex --help
  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$TRAVIS_BUILD_DIR/003work/002memo DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/pdf/002memo DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.pdf DIR_TEMPLATE=$T_DIR_TEMPLATE
  - echo here,kl+2
#2.1.3 .rst转换成 格式.pdf 003post pandoc
  - make startconv -f $TRAVIS_BUILD_DIR/003work/000tools/002makefiles/001pandoc/linux/Makefile DIR_BASE_SRC=$TRAVIS_BUILD_DIR/003work/003post DIR_BASE_OBJ=$TRAVIS_BUILD_DIR/output/pandoc/pdf/003post DIR_BASE_COPYTO= SUFFIX_FROM=.rst SUFFIX_TO=.pdf DIR_TEMPLATE=$T_DIR_TEMPLATE
  - echo here,kl+3

#with sphinx
#`sphinx-build.html <https://www.sphinx-doc.org/en/master/man/sphinx-build.html>`__
#1.2.3 .rst转换成 格式.pdf 002memo sphinx

#-b 只认latex目标。生成LaTeX sources that can be compiled to a PDF document using pdflatex.
#-M buildername
#Alternative to -b. Uses the Sphinx make_mode module, which provides the same build functionality as a default Makefile or Make.bat. In addition to all Sphinx Builders, the following build pipelines are available:
#   latexpdf
#   Build LaTeX files and run them through pdflatex, or as per latex_engine setting. If language is set to 'ja', will use automatically the platex/dvipdfmx latex to PDF pipeline.
#   info
#   Build Texinfo files and run them through makeinfo.
#Important
#   Sphinx only recognizes the -M option if it is placed first.

#  20191102,kl+: 编译002memo成一个pdf文件，会报错，因latex知识不够，解决不了，先关闭。
#  ! LaTeX Error: Too deeply nested. 
#  尝试过，在conf.py中加入preamble, 增加enumitem}setlistdepth{99}。还以为是子目录001software中的conf.py和index.rst引起的。都不是。
#  - sphinx-build -M latexpdf $TRAVIS_BUILD_DIR/003work/002memo/001software $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo
#  - sphinx-build -M latexpdf $TRAVIS_BUILD_DIR/003work/002memo $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo
#  - sphinx-build -M latexpdf $TRAVIS_BUILD_DIR/003work/002memo $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo
  - sphinx-build -b latex $TRAVIS_BUILD_DIR/003work/002memo $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo
#  find . -type f -name '*.pdf' -exec rm -rf {} \;
#  (1) "." 表示从当前目录开始递归查找
#  (2) “ -name '*.pdf' "根据名称来查找，要查找所有以.exe结尾的文件夹或者文件
#  (3) " -type f "查找的类型为文件
#  (4) -exec rm -rf {} \; 执行命令，别忘记最后的 \;有空格的。
#  *.pdf移动到根目录
  - find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo/latex -type f -name '*.pdf' -exec mv -t $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo {} \;
# rm doctrees目录
#  -type d：表示目录， -maxdepth 1 表示只找一级,必须放在-type之前，grep -E:表示扩展正则，以支持| "doctrees|latex":表示正则这两个整体名字， xargs 表示依次作为参数送入后面命令
  #- find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo -maxdepth 1 -type d 
  - find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo -maxdepth 1 -type d | grep -E "doctrees" | xargs rm -rfv 
# rm doctrees|latex目录
#  - find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-memo -maxdepth 1 -type d | grep -E "doctrees|latex" | xargs rm -rfv 

#2.2.3 .rst转换成 格式.pdf 003post sphinx
  - sphinx-build -M latexpdf $TRAVIS_BUILD_DIR/003work/003post $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post
#  find . -type f -name '*.pdf' -exec rm -rf {} \;
#  (1) "." 表示从当前目录开始递归查找
#  (2) “ -name '*.pdf' "根据名称来查找，要查找所有以.exe结尾的文件夹或者文件
#  (3) " -type f "查找的类型为文件
#  (4) -exec rm -rf {} \; 执行命令，别忘记最后的 \;有空格的。
#  *.pdf移动到根目录
  - find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post/latex -type f -name '*.pdf' -exec mv -t $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post {} \;
#  - rmdir $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post/doctrees
#  -type d：表示目录， -maxdepth 1 表示只找一级，必须放在-type之前，grep -E:表示扩展正则， "doctrees|latex":表示正则这两个整体名字， xargs 表示依次作为参数送入后面命令
# rm doctrees目录
  - find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post -maxdepth 1 -type d | grep -E "doctrees" | xargs rm -rfv 
# rm doctrees|latex目录
#  - find $TRAVIS_BUILD_DIR/output/sphinx/pdf/build-post -maxdepth 1 -type d | grep -E "doctrees|latex" | xargs rm -rfv 

# 设置git提交名，邮箱；替换真实token到_config.yml文件，最后depoy部署
after_script:
#  - git config user.name "kevinluolog"
#  - git config user.email "kevinluolog_72@163.com"
  # 替换同目录下的_config.yml文件中gh_token字符串为travis后台刚才配置的变量，注意此处sed命令用了双引号。单引号无效！
#  - sed -i "s/gh_token/${GH_TOKEN}/g" ./_config.yml
#  - hexo deploy

#所有输出： ./output 2 kevinluolog/travisci_out_kdoc, all output can gitclone on kevinluolog/travisci_out_kdoc
deploy:
  provider: pages
  skip_cleanup: true
  github_token: $GH_TOKEN_FULL  # Set in the settings page of your repository,    as a secure variable
  keep_history: true
  local_dir: $TRAVIS_BUILD_DIR/output
  repo: kevinluolog/travisci_out_kdoc
  target_branch: output
  on:
    branch: dev

###d1.02 学习memo笔记：sphinx html/build-memo 2 kevinluolog/gp-memo/gh-pages, 网页kevinluolog.github.io/gp-memo
##deploy:
##  provider: pages
##  skip_cleanup: true
##  github_token: $GH_TOKEN_FULL  # Set in the settings page of your repository,    as a secure variable
##  keep_history: true
##  local_dir: $TRAVIS_BUILD_DIR/output/sphinx/html/build-memo
##  repo: kevinluolog/gp-memo
##  target_branch: gh-pages
##  on:
##    branch: dev
##
###d2.02 博客post文章：sphinx html/build-memo 2 kevinluolog/gp-memo/gh-pages, 网页kevinluolog.github.io/gp-memo
##deploy:
##  provider: pages
##  skip_cleanup: true
##  github_token: $GH_TOKEN_FULL  # Set in the settings page of your repository,    as a secure variable
##  keep_history: true
##  local_dir: $TRAVIS_BUILD_DIR/output/sphinx/html/build-post
##  repo: kevinluolog/gp-post
##  target_branch: gh-pages
##  on:
##    branch: dev

# End: Build LifeCycle